// Each #kernel tells which function to compile; you can have many kernels
#pragma kernel GameOfLife

// Create a RenderTexture with enableRandomWrite flag and set it
// with cs.SetTexture

RWTexture2D<float4> Result;

RWTexture2D<float4> Prev;


[numthreads(8,8,1)]
void GameOfLife (uint3 id : SV_DispatchThreadID)
{
    float4 sum = Prev[id.xy + uint2(0,1)] + Prev[id.xy + uint2(1,1)] + 
    Prev[id.xy + uint2(1,0)] + Prev[id.xy + uint2(-1,-1)] + Prev[id.xy + uint2(0,-1)] +
    Prev[id.xy + uint2(-1,0)] + Prev[id.xy + uint2(-1,1)] + Prev[id.xy + uint2(1,-1)];

    int currentVal = Prev[id.xy].w;
    if(currentVal > 0)
    {
        if( sum.w >= 2 && sum.w <= 3)
        {
            currentVal = 1;
        }
        else
        {
            currentVal = 0;
        }

    }
    else
    {
        if(sum.w == 3)
        {
            currentVal = 1;
        }
        else
        {
            currentVal = 0;
        }

    }

    Result[id.xy] = float4(255*currentVal, 255*currentVal, 255*currentVal, currentVal);
    //Result[id.xy] = Result[id.xy];//float4(255,255,255,0.0);//value, value, value, 0.0);
    //Result[id.xy] = Prev[id.xy];
    Result[id.xy] = float4(id.x & id.y, (id.x & 15)/15.0, (id.y & 15)/15.0, 0.0);


    

} 

